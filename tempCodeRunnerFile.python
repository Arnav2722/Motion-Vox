import os
import cv2
import numpy as np
import time
import mediapipe as mp
from matplotlib import pyplot as plt

import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense
from tensorflow.keras.callbacks import TensorBoard

# Define your log directory for TensorBoard
log_dir = os.path.join("Logs")
tb_callback = TensorBoard(log_dir=log_dir)

# Define your actions
actions = np.array(["namaste", "hello", "thanks", "yes", "no"])

# Define your model architecture
model = Sequential(
    [
        LSTM(64, return_sequences=True, activation="relu", input_shape=(30, 1662)),
        LSTM(128, return_sequences=True, activation="relu"),
        LSTM(96, return_sequences=True, activation="relu"),
        LSTM(128, return_sequences=True, activation="relu"),
        LSTM(64, return_sequences=False, activation="relu"),
        Dense(64, activation="relu"),
        Dense(32, activation="relu"),
        Dense(actions.shape[0], activation="softmax"),
    ]
)

# Compile the model
model.compile(
    optimizer="Adam", loss="categorical_crossentropy", metrics=["categorical_accuracy"]
)

# Print the model summary
model.summary()

# Load and prepare your data (X_train, y_train, X_test, y_test) before fitting the model

# Fit the model
# model.fit(X_train, y_train, epochs=1000, callbacks=[tb_callback])

# Make predictions
# res = model.predict(X_test)

# Save model weights
# model.save('action.h5')

# Load model weights
# model.load_weights('action.h5')
